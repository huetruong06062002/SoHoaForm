version: '3.8'

services:
  sqlserver:
    image: mcr.microsoft.com/mssql/server:2022-latest
    container_name: sohoaform-sqlserver  
    environment:
      - ACCEPT_EULA=Y
      - SA_PASSWORD=YourVeryStrong!Password123
      - MSSQL_PID=Express
      - MSSQL_TCP_PORT=1433
    ports:
      - "0.0.0.0:1433:1433"
    volumes:
      - sqldata:/var/opt/mssql
      - ./sql-init:/docker-entrypoint-initdb.d
    restart: unless-stopped
    networks:
      - sohoaform-network
    healthcheck:
      test: ["CMD-SHELL", "/opt/mssql-tools18/bin/sqlcmd -S localhost -U sa -P 'YourVeryStrong!Password123' -C -Q 'SELECT 1' || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 60s

  # Thêm init container để configure SQL Server
  sqlserver-init:
    image: mcr.microsoft.com/mssql/server:2022-latest
    depends_on:
      sqlserver:
        condition: service_healthy
    networks:
      - sohoaform-network
    command: >
      /bin/bash -c "
      echo 'Configuring SQL Server for remote access...'
      /opt/mssql-tools18/bin/sqlcmd -S sqlserver -U sa -P 'YourVeryStrong!Password123' -C -Q \"
      EXEC sp_configure 'show advanced options', 1;
      RECONFIGURE;
      EXEC sp_configure 'remote access', 1;
      RECONFIGURE;
      EXEC sp_configure 'remote query timeout', 0;
      RECONFIGURE;
      SELECT name, value FROM sys.configurations WHERE name = 'remote access';
      \"
      echo 'SQL Server remote access configured successfully!'
      "
    restart: "no"

  api:
    build:
      context: .
      dockerfile: Dockerfile.api
    container_name: sohoaform-api
    environment:
      - ASPNETCORE_ENVIRONMENT=Production
      - ConnectionStrings__DefaultConnection=Server=sqlserver,1433;Database=SoHoaFormDB;User Id=sa;Password=YourVeryStrong!Password123;TrustServerCertificate=true;
    ports:
      - "5000:5000"
    depends_on:
      - sqlserver-init
    restart: unless-stopped
    networks:
      - sohoaform-network

  frontend:
    build:
      context: .
      dockerfile: Dockerfile.frontend
    container_name: sohoaform-frontend
    ports:
      - "3000:3000"
    depends_on:
      - api
    restart: unless-stopped
    networks:
      - sohoaform-network

volumes:
  sqldata:

networks:
  sohoaform-network:
    driver: bridge